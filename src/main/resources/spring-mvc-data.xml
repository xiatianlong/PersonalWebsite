<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-lazy-init="true">

    <!-- 引入配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:dbconfig.properties" />
    </bean>

    <!--配置数据源(alibaba连接池)-->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="10" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="50" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 开启Druid的防御sql注入功能 -->
        <property name="filters" value="wall" />
        <property name="proxyFilters" ref="wall-filter" />
        <!-- Oracle连接是获取字段注释 -->
        <property name="connectProperties">
            <props>
                <prop key="remarksReporting">true</prop>
            </props>
        </property>
    </bean>

    <!-- 防御sql注入配置 -->
    <bean id="wall-filter" class="com.alibaba.druid.wall.WallFilter">
        <property name="dbType" value="mysql" />
        <property name="config" ref="wall-filter-config" />
        <property name="logViolation" value="true" />
        <property name="throwException" value="false" />
    </bean>
    <!-- 除基本的select,insert,update,delete外，禁止对数据库的其他操作，特别是获取数据库基本信息和更改数据结构的操作 -->
    <bean id="wall-filter-config" class="com.alibaba.druid.wall.WallConfig" init-method="init">
        <!-- 指定配置装载的目录 -->
        <property name="dir" value="META-INF/druid/wall/mysql" />
        <!-- 是否允许执行REPLACE语句 -->
        <property name="replaceAllow" value="false" />
        <!-- 是否允许通过jdbc的call语法调用存储过程 -->
        <property name="callAllow" value="false" />
        <!-- 是否允许使用SET语法 -->
        <property name="setAllow" value="false" />
        <!-- truncate语句是危险，缺省打开，若需要自行关闭 -->
        <property name="truncateAllow" value="false" />
        <!-- 是否允许创建表 -->
        <property name="createTableAllow" value="false" />
        <!-- 是否允许执行Alter Table语句 -->
        <property name="alterTableAllow" value="false" />
        <!-- 是否允许drop表 -->
        <property name="dropTableAllow" value="false" />
        <!-- 是否允许语句中存在注释，Oracle的用户不用担心，Wall能够识别hints和注释的区别 -->
        <property name="commentAllow" value="true" />
        <!-- 是否允许执行mysql的use语句，缺省打开 -->
        <property name="useAllow" value="false" />
        <!-- 是否允许执行mysql的describe语句，缺省打开 -->
        <property name="describeAllow" value="false" />
        <!-- 是否允许执行mysql的show语句，缺省打开 -->
        <property name="showAllow" value="false" />
        <!-- 是否允许一次执行多条语句，缺省关闭 -->
        <property name="multiStatementAllow" value="false" />
        <!-- 不允许调用Connection.getMetadata方法 -->
        <property name="metadataAllow" value="false" />
        <!-- 不允许调用Connection/Statement/ResultSet的isWrapFor和unwrap方法 -->
        <property name="wrapAllow" value="false" />
        <!-- 不允许无条件删除操作 -->
        <property name="deleteWhereNoneCheck" value="true" />
        <!-- 不允许无条件更新操作 -->
        <property name="updateWhereNoneCheck" value="true" />
    </bean>

    <!--配置EntityManagerFactory-->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>
        <property name="packagesToScan" value="com.personalWebsite.entity" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <!--<prop key="hibernate.hbm2ddl.auto">validate</prop>-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>
            </props>
        </property>
    </bean>

    <!-- 配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!--  配置支持注解的事务-->
    <tx:annotation-driven />

    <!-- 配置spring data-->
    <jpa:repositories base-package="com.personalWebsite" entity-manager-factory-ref="entityManagerFactory"/>

</beans>